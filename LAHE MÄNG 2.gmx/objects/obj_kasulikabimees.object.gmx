<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sc_globalvar_init();

/*//LOAD
ini_open("save_borges.ini");

peatukk = ini_read_real("s", "peatukk", 0);
taltsutatud = ini_read_real("s", "taltsutatud", 0);
algabedasi = ini_read_real("s", "algabedasi", 0);

ini_close();
*/
//KONTR
if !algabedasi{
    sc_klav_popup();
}
        /*if show_question_async("igaksjuhuks ütlen, et klaviatuur on kohustuslik ja väga tähtis. sul on seda vaja.#vajuta seda nuppu, kus peal on rohkem tähti, kui sa ei ole minuga nõus"){
            if show_question_async("asi on lihtsalt selles, et kui pole klaviatuuri, siis ei saa vajutada pikka klahvi ega Esc'i peal hoida. isegi nooli ei saa vajutada, rääkimata f11'est.#sa ei usu mind?#NB!#'yes' ei ole 'ei' ja 'no' ei ole 'jah'"){
                //ll
            }
        }else{game_end();}
    }else{game_end();}*/

//MDEA
//sc_init_r_indexid();

//db
//db_indexid();

xvink = 3
yvink = 3


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//exit menÜÜ
if !instance_exists(obj_exit) &amp;&amp; keyboard_check_pressed(vk_escape){
    instance_create(0,room_height/2,obj_exit);
}
//fullscreen
if keyboard_check_released(vk_f11){
    if window_get_fullscreen()
       {
       window_set_fullscreen(false);
       }
    else {window_set_fullscreen(true);}
}
//lahenali
if !window_has_focus() and algabedasi{
    window_set_position(window_get_x()+xvink,window_get_y()+yvink);
    //x
    if display_get_width() - abs(xvink) &lt; window_get_x() + window_get_width(){
        //window_set_position(window_get_x()4*-xvink,window_get_y());
        xvink = -xvink;
        audio_play_sound(s_boing,0.6,false);
    }
    if window_get_x() &lt; abs(xvink) {
        ///window_set_position(xvink+2,window_get_y());
        xvink = -xvink;
        audio_play_sound(s_boing,0.6,false);
    }
    //y
    if display_get_height() - abs(yvink) &lt; window_get_y() + window_get_height(){
        //window_set_position(window_get_x(),window_get_y()-4*yvink);
        yvink = -yvink;
        audio_play_sound(s_boing,0.6,false);
    }
    if window_get_y() &lt; abs(yvink) {
        ///window_set_position(window_get_x(),yvink+2);
        yvink = -yvink;
        audio_play_sound(s_boing,0.6,false);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i_d, stat;
i_d = ds_map_find_value(async_load, "id");
if i_d == msg{
    if ds_map_find_value(async_load, "status"){
        if step mod 2 != 0{
            if step != 7 and step != 5{
                game_end();
            }else{
                algabedasi = true;
            }
        }else{
            step -= 1;
        }
    }else{
        step += 2;
    }
}
if !algabedasi{
    sc_klav_popup();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*///funktsioonigraafik
draw_set_colour(c_green);

var x1 = 0;
var y1;

for (x1 = 0; x1 &lt;= room_width; x1 ++){
    y1 = -((sin((x1+t)*(pi/180))*mouse_y/2)-room_height/2);
    //y1 = room_height/2;
    draw_point(x1,y1);
}
t +=90;

if t &gt;= 365{
    t = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//syda must taust
if room == r_syda &amp;&amp; !instance_exists(obj_freq2){
    draw_set_colour(make_colour_rgb(55, 27, 3));
    draw_rectangle(0,0,900,600,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
