<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//funktsioonig
t = 0;

//端l
ul = 0;

xvastus[0] = 600;
yvastus[0] = 500;

xvastus[1] = 500;
yvastus[1] = 550;

xvastus[2] = 105;
yvastus[2] = 400;

xvastus[3] = 800;
yvastus[3] = 140;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sound
if !audio_is_playing(s_sine){
    audio_play_sound(s_sine,1,false);
}
audio_sound_gain(s_sine,(obj_pp.y+98)/room_height,0);
audio_sound_pitch(s_sine,obj_pp.x/500);

//sound 端l
if !instance_exists(obj_salapara){
    if !audio_is_playing(s_sine1){
        audio_play_sound(s_sine1,1,false);
    }
    audio_sound_gain(s_sine1,(yvastus[ul]/room_height),0);
    audio_sound_pitch(s_sine1,xvastus[ul]/500);

    //debug
    //show_debug_message(string(round(audio_sound_get_gain(s_sine)*100)));
    //show_debug_message(string(round(audio_sound_get_gain(s_sine1)*100)));
    //show_debug_message(string(audio_sound_get_pitch(s_sine)));
    //show_debug_message(string(audio_sound_get_pitch(s_sine1)));
    show_debug_message(string(obj_pp.x));
    show_debug_message(string(xvastus[ul]));

    //端l
    //if round(audio_sound_get_gain(s_sine)*100) == round(audio_sound_get_gain(s_sine1)*100) &amp;&amp; round(audio_sound_get_pitch(s_sine)) == round(audio_sound_get_pitch(s_sine1)){
    if obj_pp.x &lt; xvastus[ul] + 4 &amp;&amp; obj_pp.x &gt; xvastus[ul] - 4 &amp;&amp; obj_pp.y+98 &lt; yvastus[ul] + 4 &amp;&amp; obj_pp.y+98 &gt; yvastus[ul] - 4{
        audio_play_sound(s_hello,1,false);//EDIT
        if ul &lt; array_length_1d(xvastus)-1{
            ul ++;
        }else{
            peatukk = 3.5;
            room_goto(r_pre_nether);
            //instance_create(222,0,obj_salapara);
            //instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///funktsioonigraafik
draw_set_colour(make_colour_rgb(55, 27, 3));

var x1 = 0;
var y1;
var x1e = -1;
var y1e = room_height/2;

for (x1 = 0; x1 &lt;= room_width; x1 ++){
    y1 = -((sin(((x1*((obj_pp.x/500)+0.1))+t)*(pi/180))*(obj_pp.y+98)/2)-room_height/2);
    //y1 = room_height/2;
    if !eksperiment{
        draw_point(x1,y1);
    }else{
        //EKSPERIMENT
        draw_line(x1,x1e,y1,y1e);
        x1e = x1;
        y1e = y1;
    }
}

t +=9+obj_pp.x/5;

if t &gt;= 365{
    t = 0;
}
//端lesanne
if !instance_exists(obj_salapara){
    //draw_set_colour(make_colour_rgb(230, 180, 57));
    draw_set_alpha(0.5);
    
    var x1 = 0;
    var y1;
    var x1e = -1;
    var y1e = room_height/2;
    
    for (x1 = 0; x1 &lt;= room_width; x1 ++){
        y1 = -((sin(((x1*((xvastus[ul]/500)+0.1)))*(pi/180))*(yvastus[ul])/2)-room_height/2);
        
        draw_line_width(x1e,y1e,x1,y1,3);
        x1e = x1;
        y1e = y1;
    }
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
